# ================================JamesKid============================== 
# @author      : JamesKid  
# @description : This is note about programe tips
# @change      : 2017.9.11  add 自动化开发tips.

# ======================================================================

# ==========================   自动化开发  =============================

# 脚本式开发自动化
    # 介绍
        通过IDE或通过vim脚本，或shell脚本，封装常用功能,或对代码进行检测，
        从而提高代码质量与开发速度的开发方式.

    # 自动化开发的手段
        1. IDE
        2. vim+shell

    # 自动化开发目的及优点与缺点
        # 优点
            1. 极大提升开发速度
            2. 减少程序出错
            3. 简化代码
            4. 
        # 缺点
            1. 增加脚本开发时间，相当于添加额外工作量(权衡)
            2. 脚本可能存在不稳定性，多了一个出错的可能(充分测试脚本)

        # 权衡
            # 时间权衡
                当: 脚本开发时间＋使用了脚本的开发时间 <  纯开发时间
                说明提升了开发速度，可取,反之则说明需要更多开发时间

            # 出错权衡
                当:  脚本开发出错数 <  纯开发出错数

        
    # 一. 自动化前提条件
        1. 代码规范与风格尽可能统一

    # 二. 自动化方法(example_)
        1. 检测提交代码是否包含print,var_dump,die代码
        2. 自动检测语义错误
        3. 自动植入打印代码脚本
        4. 快速搜索删除print,var_dump,die
        5. 快速切换

    # 三. 共享式脚本

    # 四. 结语
        1. 写代码多对代码高一个层次进行思考.
        2. 多思考怎样将重复工作化简,甚至不作重复工作.
        3. 多思考怎样能使代码更少更可读,结构更清晰.
        4. 多思考怎样能使代码更方便调试,更少出错.

        写代码，不能只想着实现功能，多进行代码高一个层次的思考,并将其付诸
        行动实现，必将更快，更高，更强
    
# ==========================   区别开发  =============================

# 二. 分环境
    1. 配置中心式
    2. 固定式, 如加本地ip,env.txt文件


