### day1 
    ###  02 
        ### code 
            var divs = document.getElementByTagName("div"); // 获取所有div元素
            btn1.onclick function() {
                for (var i=0; i< divs.length; i++ ){    // divs.length 获取div个数
                    divs[i].style.display = "block";   // 显示该div
                }
            }

        ### note
            1. css 缩写插件? emmet 
            2. innerText 属性有兼容性问题
            3. script 代码不如果要放到 html <head></head> 标签里,则需要添加以下
                window.onload = function() {
                }
            4. js 注册事件会被覆盖如
                window.onload = function() { }
                window.onload = function() { }  // 这个会覆盖第一个
    ###  03 
        ### code
            # 1.jquery 标准入口函数写法
                $(document).ready(function(){
                });

            # 2. jquery 注册事件
                $("#id").click(function(){

                });

            # 2.
                $("#id").show(1000)   // 用一秒时间展出,从左上角开始, show可以跟参数
                $("#id").slideDown(1000)   // 向下展出
                $("#id").fadeIn(1000)   // 淡入
                $("#id").fadeOut(1000)   // 淡出


        
        ###  note
            1. jquery点击事件不会覆盖


    ### 04 
        ### note
            animate.js common.js  //  了解一下这两个库

    ### 05
        ### note
            1.jquery 3.0 版本开始只支持ie9+ 以上版本了
            2. 如果要支持旧版本ie,使用jquery1.1.12 版本
            3. .min.js 压缩版本会去掉空格,换行,注释, 功能并不减少

    ### 06  
        ### code 
            # js 入口函数
                windows.onload = function() {
                }

            # jquery 标准入口函数写法
                $(document).ready(function(){  // 把document转成jquery对象然后调用ready
                });

            # jquery入口函数简写法
                $(function() {
                });
                

        ### note 
            1. jquery标准入口函数和简写法不会覆盖,两个都会执行
            2. js 的入口函数要执行得晚一点
            3. js入口函数要等图片加载完才执行,jquery入口函数不用等函数加载完就会执行
            4. 两者的入口函数都要等dom加载完成才加载,但不需要等图片加载
                
    ### 07 
        ### note
            1. DOM对象(js对象):通过js获取的对象
            2. jq对象: 通过jquery获取到的对象
            3. $li = $('li');   # li前加$是为了容易看出li是jquery对象
            4. js 对象不能调用jquery对象的方法
            5. console.log($li); 可以查看li jquery对象里有哪些属性和方法
            6. jquery对象能调用DOM对象方法,但要加上key,如下:
                $li[0].setAttribute("name","hehe");
            7. jquery对象实际是多包了一层数组的DOM对象

    ### 08 
        ### code 
            1. DOM对象转换成jquery对象
                var cloth = document.getElementById("cloth");
                $(cloth);    // 转换
                $(cloth).text("呵呵");

            2. jquery对象对象转换成DOM对象
                // 方法一
                    var $l = $("li");
                    $li[0].style.backgroundColor = "red";

                // 方法二
                    $li.get(0);
            
        ### note 
            
            1. DOM对象可以转换成jquery对象
            2. jquery对象也可以转成DOM对象
            3. 用js方式获取的是js对象
            4. 用jquery方式苑的对象是jquery对象

    ### 09 
        ### note
           1. ul>li{我是第$个li}    // 生成1到10数字的li
        
    ### 10 $的本质
        ### code 
            1. $的本质是function(函数),用$时记得跟()
                console.log(typeof $);  // 输出function

        ### note
            1. $(domobj)  把dom对象转成jquery对象
            2. $()的参数可以是function, object, 字符串,如
                $(function(){    // 入口函数
                });
                $(document);   // 转成jquery对象
                $("div");     // 选择对象

    ### 11 
        ### note 
            1. jquery选择器兼容css1-3的选择器,css能选的写法,jquery都可以用

    ### 12 
        ### code
            $("s1>s2");   // 子代选择器
            $("s1 s2");   // 后代选择器
            $("s1,s2");   // 并集选择器
            $("s1s2");    // 交集选择器

        ### note
            1. 鼠标事件
                mouseover   // 子针穿过元素或其子元素都会触发,
                mouseout    // 鼠标离开
                mouseenter  // 只有鼠标穿过选中元素才会触发
                mouseleave  //  鼠标离开

                建议用mouseenter, mouseleave,  效率更好

    ### 13 
        ###  note
            1. 过滤选择器用冒号
                $("li:first");
                $("li:odd");  // 选择奇数
                $("li:even");  // 选择遇数元素
                $("li:eq(1)");  // 选择第2个元素
            
    ### 14 下接菜单案例
        ###  code 
            $li = $(".wrap->ul>li);
            $li.mouseover(function(){
                // console.log(this); // 这里的this为 dom对象
                // $(this);    // 将this转成jquery,对象,就可以用jquery的方法了
                $(this).children("ul").show();

            });
            $li.mouseout(function(){
                $(this).children("ul").hide();
            });
            
        ### note 
            1. 筛选选择器(方法)
                
    ### 15 突出展示案例
        ### code 
            $li = $(".wrap->ul>li);
            $li.mouseenter(function(){
                $(this).css("opacity","1").siblings().css("opacity","0.6");
            });
            

        ### note 
            1. siblings    选择其他兄弟,排除自己 

    ### 16 手风琴案例
        ### code 
            $(this).next()  // 下一个兄弟元素
            $(this).next().slideDown().parent().siblings().children("div").slideUp();
            $(this).prev()  // 上一个兄弟元素

        ### note 
            1. 链式编程,方法可以一直调下去,因为每一步返回的是一个jquery对象
        

    ### 17 淘宝精品案例

        ### code
            $(function() {
                $("#left>li").mouseenter(function(){
                    var idx = $(this).index();  //  获取当前对象下标的索引 ****
                    $("#center>li:eq("+idx+")").show().siblings().hide();
                });
                $("#right>li").mouseenter(function(){
                    var idx = $(this).index()+9;  //  获取当前对象下标的索引 ****
                    $("#center>li).eq(idx).show().siblings().hide();
                    // $("#center>li).eq(idx);  // 返回jquery对象
                    // $("#center>li).get(idx);  // 返回js对象
                });
            });

        ### note 
            1. eq, 也可以筛选器的形式存在


    ### 18 调试
        ### note 
            1. 找不到对象打断点后一般会显示
                jQuery.fn.init[0]  // 表示获取到的对象是空的

    ### 19 index方法详解
        ### note
            1. index()是方法,不是属性
            2. index()会返回当前元素所有兄弟元素里的索引

    ### 20 实质
        ### note     
            1. $ === jQuery 
            2. fint() 找后代
            
            
# day2
    ### 01

    ### 02
        ### note
            # css 要点,两种方法都可以,建议用驼峰式
                $("li").css("font-size","32px");
                $("li").css("fontSize","32px");
                $("li").css({
                    backgroundColor:"red",
                    color:"red",

                });

            # 获取样式
                $("li").css("backgroundColor");

            # 隐式迭代
                // 设置操作的时候,会给所有的jquery对象赋值
                // 获取的时候:只会返回第一个元素对应的值

    ### 03 
        ### note 
            1. hasClass 判断是否有某类
            2. toggleClass  切换类
        
    ### 04 tab栏切换
         ### code
            $(this).addClass("active").siblings().removeClass("active");
            var idx = $(this).index();
            $(".main").eq(idx).addClass("selected").siblings().removeClass("selected");

    ### 05 属性操作
        ###  code
            $("img").attr("alt","heheheh"); // 设置属性
            $("img").attr({
                alt:" lkjlkkj",
                title:" lkjlkkj",
                bb:"hello", // 自定义属性
            }); // 设置多个属性
            

    ### 06 图片相册案例
        $(function(){
            $("#xxx a").click(function(){
                var href = $(this).attr("href");
                $("#image").attr("src",href);
                var title  = $(this).attr("title");
                $("#des").text(title);
            });

        });

    ### 08  三组基本动画-show
        # note 
            1. show     # 从左上开始

    ### 09  三组基本动画-show
        # note 
            1. slideDown    # 上向下滑动
            2. slideUp      # 下向上收起 
            3. slideToggle  # 切换函数 

            4. fadeIn()     # 淡入
            5. fadeOut()    # 淡出
            5. fadeToggle()  # 淡入淡出切换

    ### 10 图片轮播
        # code 
            $(function() {
                var count = 0;
                var numbers = $(".slider li").length -1;
                $(".arrow-right").click(function(){
                    count++; // 下一张图
                    if( count == numbers ){
                        count = 0;
                    }
                    $(".slider li").eq(count).fadeIn().siblings("li").fadeOut(); // 下一张图淡入,其他淡出

                });
                $(".arrow-left").click(function(){
                    count--; // 下一张图
                    if( count == -1 ){
                        count = numbers;
                    }
                    $(".slider li").eq(count).fadeIn().siblings("li").fadeOut(); // 下一张图淡入,其他淡出

                });

            });
        # note 
            1. 实现
                # 思维步骤
                    1. 用一个框装然后父用相对定位,子用绝对定位,将多张图片重叠
                    2. 用count装当前值
                    3. 用排他排除其他图片
            
            2. css 选取第一个定义样式
                .slider li:first-child


    



    
